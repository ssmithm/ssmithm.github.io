{
  "hash": "21f8e1f92c4121ef8c7b3b442225f110",
  "result": {
    "markdown": "---\ntitle: \"Baseline Characteristics Table\"\nformat: \n  html:\n    embed-resources: true  \neditor: visual\n---\n\n\nA common task for us is putting together a baseline characteristics table, or \"Table 1.\" This is usually painful to do by hand, particularly when you often have to do it multiple times whenever a small change is made to a cohort. The following describes one way of automating much of this, using R and the `tbl_summary()` function in the gtsummary package.\n\n## Packages\n\n### {tidyverse}\n\nIf you're not already familiar with it, I think you'll find [{tidyverse}](https://www.tidyverse.org/) extremely helpful - it is actually a bundle of packages centered around 'tidy' data, which is just a fancy description for data that take the form of 3 rules:\n\n1.  Each variable has its own column\n\n2.  Each observation has its own row.\n\n3.  Each value has its own cell.\n\nOutside of time-varying analyses, that's pretty much exactly the type of analytic dataset we are creating for most of our work.\n\n### {gtsummary}\n\nIn addition to tidyverse, for the baseline characteristics table, the package [{gtsummary}](https://www.danieldsjoberg.com/gtsummary/) gets us pretty close to a final output. If you want to read more, see it's vignette at the above link. {gtsummary} is based on R Studio's [{gt} package](https://gt.rstudio.com/) which is quite a nice package and has some other really cool extensions (e.g., [{gtExtras}](https://jthomasmock.github.io/gtExtras/))\n\n### {haven}\n\n[{haven}](https://haven.tidyverse.org/) is a tidyverse package that reads SAS datasets directly. Particularly helpful for us since most of our initial data wrangling has to take place in SAS. If you haven't noticed already, base R is not particularly good at handling huge datasets (absent a lot of memory resources on a VM) because it completely stores them in memory. If you really want to try though, [{arrow}](https://arrow.apache.org/) may be your best bet.\n\n### {labelled}\n\n[{labelled}](https://cran.r-project.org/web/packages/labelled/vignettes/intro_labelled.html) allows us to apply a label to each variable as an \"attribute.\" Gtsummary will use these labels in the table output instead of variable/column names.\n\n### {flextable}\n\n[{flextable}](https://ardata-fr.github.io/flextable-book/) will be used to get the final output into a word document.\n\nLet's load the packages (you'll probably get a lot of red text warning you about 'masked' objects -- don't sweat them).\n\n\n::: {.cell messages='false' warnings='false'}\n\n```{.r .cell-code}\n# if you need to install, you would use:\n# install.packages(\"gtsummary\")\n# or\n# install.packages(c(\"tidyverse\", \"gtsummary\"))\n\n# load the relevant packages\nlibrary(tidyverse)\nlibrary(gtsummary)\nlibrary(haven)\nlibrary(labelled)\nlibrary(flextable)\n```\n:::\n\n\n## Load the data\n\nHere's where you load the SAS dataset, using the haven package.\n\n::: callout-tip\n## Some very basic R coding format.\n\nAt the most basic level, R expects you to assign values to objects. The object can be thought of as a symbol (or name) allowing you to access the value inside. The value can be any number of things, including a vector of length one, a list, a data frame (a dataset that is a special type of list), a function, and other things. The basic formatting is `object <- value` , which tells R to assign to 'object' the 'value' using the `<-` assignment operator (you can also use an `=` for the assignment operator instead). The short-cut for the assignment operator on a Mac is Option+- (option and minus sign).\n:::\n\nWe are going to assign a dataset, read from haven, to the object `tab1` (can be any name you want it to be). To do so, we need the `read_sas()` function from haven, and the thing that is returned from that function is an R-readable data frame. There's lots more options with this function than I use below, but the basics usually work well.\n\n::: callout-tip\nNote that R has case-sensitive variable/column names. Make your life a lot easier and rename variables to lowercase with the `rename_with()` function and `tolower` option, i.e., `rename_with(tolower)` (see below)\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# note that the filepath needs forward slashes, or two backwards slashes,\n# e.g., \"C:/Users/.../...sas7bdat\" or \"C:\\\\Users\\\\...\\\\...sas7bdat\"\n#\n# tab1 <- read_sas(\"E:/.../.../...sas7bdat\") %>% \n#   rename_with(tolower)    \n```\n:::\n\n\n## Data wrangling for table1\n\nI already have my data loaded in an object called `aim1cohort`, so I'm just going to assign it the new name `tab1`, but you would not need to run this if you run above to load the data directly from a SAS dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nload(file = \"/Users/stevensmith/Dropbox (UFL)/R Projects/K01-Initial_Antihtn_Prescribing/data/aim1cohort.rda\")\n\ntab1 <- aim1cohort \n```\n:::\n\n\n::: callout-tip\n## A note on 'pipe's\n\nOne thing that's worth reading up on the `%>%` \"pipe\". See this [here](https://magrittr.tidyverse.org/reference/pipe.html) or [here](https://r4ds.had.co.nz/pipes.html). It's a tidyverse thing originally coming from the magrittr package. Because it's quite popular, Base R has now incorporated its own pipe now which does almost exactly the same thing, but looks like this: `|>`. You can use ctrl+shift+M as a short-cut, and in your R-studio preferences, you can tell R-Studio whether to use the native pipe `|>` or magrittr's `%>%`. Basically, it's a way to pipe an object forward from one function to the next, as opposed to having to nest a bunch of functions within one another.\n:::\n\nOk, here's the data wrangling code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# generally bad practice unless you know exactly what you're doing - you don't want to write\n# over your objects, which is what I'm doing here:  writing over tab1 with a modified tab1\ntab1 <- tab1 %>%\n  \n  # select only variables needed; ends_with() function is a nifty short cut to \n  # grab all variables whose name ends with that string\n  select(c(\"patid\",\"source\",\"age\",\"age_cat\", \"hispanic\",\"sex\",\"race\",\"index_year\", \n           ends_with(\"indicator\"), \"combined_score_num\")) %>%\n  \n  # mutate() is for creating new variables. Some of this should look pretty \n  # similar to what you're used to in SAS. \n  # c() function just combines multiple things and works similarly here to a\n  # SAS parenthetical list, i.e., race in (\"No Information\", ...)\n  mutate(race = if_else(race %in% c(\"No Information\",\"Refuse to Answer\",\"Unknown\"), \"Unknown\", race),\n         sex = if_else(sex == \"Unknow\", \"Unknown\", sex),\n         hispanic = if_else(hispanic %in% c(\"Other\",\"Refuse to Answer\", \"No Information\", \"Unknown\"), \"Unknown\", hispanic),\n         \n         # The vector type is important for what is passed on to gtsummary, because\n         # the gtsummary packages does differet things with different vector types.\n         # for example, a numeric vector gets characterized by measures of central\n         # tendency, i.e., median (IQR), or mean Â± SD. A factor will get processed\n         # as a categorical variable. BUT, if you want {gtsummary} to not bother with\n         # giving you the N (%) of people without a comorbidity (e.g., CKDindicator = 0)\n         # then you want to set those as INTEGERS. \n         # Below, we set demographics as factors, because we want all levels output. \n         # But, we set the comorbidities as integers, because we only want to know the \n         # n (%) of those who have indicator=1. \n         #\n         # The following tidyverse/dplyr syntax accomplishes this quickly, by \n         # gathering all the variables we want as factors, and all the variables\n         # we want as integers, and applying the relevant function in purrr style \n         # ~lambda:\n         across(c(hispanic, sex, index_year), ~factor(.)),\n         across(ends_with(\"indicator\"), ~as.integer(.))\n  ) %>%\n  # arrange() sorts (here, by patid).\n  arrange(patid) %>%\n  # distinct() picks out distinct values, here of patid.\n  distinct(patid, .keep_all = TRUE)\n\n\n# here we go in and work on specific columns of `tab1` dataset and \n# order the levels (values) of that column in the way we want it presented in\n# the output table, using the factor() function. Basically, we're just taking \n# the column as is, and replacing it with the same data, but telling R what is \n# should be the intrinsic order of these values when R outputs anything with it. \n# (Not actually changing given values for a given observation)\ntab1$race <- factor(tab1$race, levels = c(\"American Indian or Alaska Native\",\n                                          \"Asian\",\n                                          \"Black or African American\",\n                                          \"Native Hawaiian or Other Pacific\",\n                                          \"White\",\n                                          \"Multiple Race\",\n                                          \"Other\",\n                                          \"Unknown\"))\ntab1$age_cat <- factor(tab1$age_cat, levels = c(\"<45 y\", \"45-64 y\", \">65 y\"))\ntab1$hispanic <- factor(tab1$hispanic, levels = c(\"Hispanic\", \"Not Hispanic\", \"Unknown\"))\n\n# note that above I'm using base R coding, not tidyverse syntax. \n# I could have accomplished the above with tidyverse (dplyr) syntax also:\ntab1 <- tab1 %>% \n  mutate(race = factor(race, levels = c(\"American Indian or Alaska Native\",\n                                        \"Asian\",\n                                        \"Black or African American\",\n                                        \"Native Hawaiian or Other Pacific\",\n                                        \"White\",\n                                        \"Multiple Race\",\n                                        \"Other\",\n                                        \"Unknown\")),\n         age_cat = factor(age_cat, levels = c(\"<45 y\", \"45-64 y\", \">65 y\")),\n         hispanic = factor(hispanic, levels = c(\"Hispanic\", \"Not Hispanic\", \"Unknown\")),\n         source = factor(source, levels = c(\"FLM\", \"MED\"), labels = c(\"Medicaid\", \"Medicare\")))\n```\n:::\n\n\n## Labels\n\nHere we can apply label and unit attributes to each column. Labels will be printed (in the output table) as specified here. It would be nice if we could also create units (e.g., years for age, or mm Hg for BP), but {gtsummary} doesn't appear to support that yet, so the work-around is to just add units to the label.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Labels\nvar_label(tab1) <- list(age = \"Age, years\",    # units added\n                        age_cat = \"Age Category\",\n                        sex = \"Sex\",\n                        race = \"Race\",\n                        hispanic = \"Ethnicity\",\n                        smokingindicator = \"Current Smoker\",\n                        diabetesindicator = \"Diabetes\",\n                        ckdindicator = \"Chronic kidney disease\",\n                        esrdindicator = \"End-stage renal disease\",\n                        hfejindicator = \"Heart failure w/ reduced EF\",\n                        chdindicator = \"Coronary heart disease\",\n                        pcrindicator = \"Prior coronary revascularization\",\n                        strokeindicator = \"Prior stroke or TIA\",\n                        padindicator = \"Peripheral arterial disease\",\n                        ascvdindicator = \"History of clinical ASCVD\",\n                        afindicator = \"Atrial fibrillation\",\n                        copdindicator = \"Chronic obstructive pulmonary disease\",\n                        asthmaindicator = \"Asthma\",\n                        depressionindicator = \"Depression\",\n                        combined_score_num = \"Combined Comorbidity Score\",\n                        statinindicator = \"Statin\",\n                        aspirinindicator = \"Aspirin\",\n                        index_year = \"Index Year\")\n```\n:::\n\n\n## Outputting the table\n\nHere we tell **{gtsummary}** to create the table, and we apply a few customizations to the table. I've opted here for columns stratified by source, as well as an overall column. You could also add a p-value column (with a piped `add_p()`) as well as other columns. See the {gtsummary} vignette at the link above for potential options.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 |> \n  \n  # restrict the table that is passed to the summary to only the variables needed \n  # else, tbl_summary() will create statistics for everything in the dataset. \n  select(age, age_cat, sex, race, hispanic, smokingindicator, diabetesindicator, \n         ckdindicator, esrdindicator, hfejindicator, chdindicator, pcrindicator,\n         strokeindicator, padindicator, ascvdindicator, afindicator, copdindicator,\n         asthmaindicator, depressionindicator, combined_score_num, statinindicator,\n         aspirinindicator, index_year, source) |> \n  \n  # call the tbl_summary() function with a few customized options\n  tbl_summary(\n    \n    # stratify the table by values of 'source'\n    by = source,\n    \n    # we don't really need this, b/c we already dealt with missing values above by\n    # categorizing them as \"Unknown\", but we could label them here however we wanted,\n    # e.g., \"(Missing)\".\n    missing_text = \"(Missing)\",\n    \n    # default is to provide median (IQR), but lets say we wanted mean Â± standard dev.\n    statistic = list(all_continuous() ~ \"{mean} Â± {sd}\")\n    ) |> \n  \n  # add a column for the entire cohort grouped together\n  add_overall() \n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"cyjdnrljja\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#cyjdnrljja .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#cyjdnrljja .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#cyjdnrljja .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#cyjdnrljja .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#cyjdnrljja .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#cyjdnrljja .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#cyjdnrljja .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#cyjdnrljja .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#cyjdnrljja .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#cyjdnrljja .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#cyjdnrljja .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#cyjdnrljja .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#cyjdnrljja .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#cyjdnrljja .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cyjdnrljja .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#cyjdnrljja .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#cyjdnrljja .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cyjdnrljja .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#cyjdnrljja .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cyjdnrljja .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#cyjdnrljja .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cyjdnrljja .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#cyjdnrljja .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#cyjdnrljja .gt_left {\n  text-align: left;\n}\n\n#cyjdnrljja .gt_center {\n  text-align: center;\n}\n\n#cyjdnrljja .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#cyjdnrljja .gt_font_normal {\n  font-weight: normal;\n}\n\n#cyjdnrljja .gt_font_bold {\n  font-weight: bold;\n}\n\n#cyjdnrljja .gt_font_italic {\n  font-style: italic;\n}\n\n#cyjdnrljja .gt_super {\n  font-size: 65%;\n}\n\n#cyjdnrljja .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#cyjdnrljja .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#cyjdnrljja .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#cyjdnrljja .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#cyjdnrljja .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#cyjdnrljja .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#cyjdnrljja .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Overall&lt;/strong&gt;, N = 143,054&lt;sup class=&quot;gt_footnote_marks&quot;&gt;1&lt;/sup&gt;\"><strong>Overall</strong>, N = 143,054<sup class=\"gt_footnote_marks\">1</sup></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Medicaid&lt;/strong&gt;, N = 71,774&lt;sup class=&quot;gt_footnote_marks&quot;&gt;1&lt;/sup&gt;\"><strong>Medicaid</strong>, N = 71,774<sup class=\"gt_footnote_marks\">1</sup></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Medicare&lt;/strong&gt;, N = 71,280&lt;sup class=&quot;gt_footnote_marks&quot;&gt;1&lt;/sup&gt;\"><strong>Medicare</strong>, N = 71,280<sup class=\"gt_footnote_marks\">1</sup></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Age, years</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">59 Â± 22</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">47 Â± 14</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">72 Â± 20</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Age Category</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â &lt;45 y</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">38,213 (27%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">33,176 (46%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">5,037 (7.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 45-64 y</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">51,007 (36%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">34,274 (48%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">16,733 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â &gt;65 y</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">53,834 (38%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">4,324 (6.0%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">49,510 (69%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Sex</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Female</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">81,555 (57%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">43,011 (60%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">38,544 (54%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">61,493 (43%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">28,760 (40%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">32,733 (46%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Unknown</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">6 (&lt;0.1%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">3 (&lt;0.1%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">3 (&lt;0.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Race</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â American Indian or Alaska Native</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">334 (0.2%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">165 (0.2%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">169 (0.2%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Asian</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,447 (1.0%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">659 (0.9%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">788 (1.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Black or African American</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">33,814 (24%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">22,041 (31%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">11,773 (17%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Native Hawaiian or Other Pacific</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">33 (&lt;0.1%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">11 (&lt;0.1%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">22 (&lt;0.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â White</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">70,156 (49%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">25,304 (35%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">44,852 (63%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Multiple Race</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">503 (0.4%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">167 (0.2%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">336 (0.5%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Other</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">20,555 (14%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">11,610 (16%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">8,945 (13%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Unknown</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">16,212 (11%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">11,817 (16%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">4,395 (6.2%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Ethnicity</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Hispanic</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">22,680 (16%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">13,016 (18%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">9,664 (14%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Not Hispanic</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">99,483 (70%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">44,696 (62%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">54,787 (77%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â Unknown</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">20,891 (15%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">14,062 (20%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">6,829 (9.6%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Current Smoker</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">32,080 (22%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">17,035 (24%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">15,045 (21%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Diabetes</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">29,633 (21%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">13,802 (19%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">15,831 (22%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Chronic kidney disease</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">17,626 (12%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">5,111 (7.1%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">12,515 (18%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">End-stage renal disease</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,072 (0.7%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">233 (0.3%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">839 (1.2%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Heart failure w/ reduced EF</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,858 (2.0%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,264 (1.8%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1,594 (2.2%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Coronary heart disease</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">7,940 (5.6%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">2,742 (3.8%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">5,198 (7.3%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Prior coronary revascularization</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">728 (0.5%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">142 (0.2%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">586 (0.8%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Prior stroke or TIA</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2,292 (1.6%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">309 (0.4%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1,983 (2.8%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Peripheral arterial disease</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">9,388 (6.6%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,483 (2.1%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">7,905 (11%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">History of clinical ASCVD</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">17,416 (12%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">4,229 (5.9%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">13,187 (19%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Atrial fibrillation</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">10,024 (7.0%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1,375 (1.9%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">8,649 (12%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Chronic obstructive pulmonary disease</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">7,769 (5.4%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">4,588 (6.4%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">3,181 (4.5%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Asthma</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">6,066 (4.2%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">4,855 (6.8%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">1,211 (1.7%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Depression</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">25,690 (18%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">10,670 (15%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">15,020 (21%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Combined Comorbidity Score</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">2.5 Â± 3.5</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1.6 Â± 2.8</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">3.5 Â± 3.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Statin</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">31,421 (22%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">13,201 (18%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">18,220 (26%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Aspirin</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">11,663 (8.2%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">6,115 (8.5%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">5,548 (7.8%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Index Year</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\"></td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\"></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2012</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">32 (&lt;0.1%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">1 (&lt;0.1%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">31 (&lt;0.1%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2013</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">17,728 (12%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">485 (0.7%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">17,243 (24%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2014</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">31,711 (22%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">11,457 (16%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">20,254 (28%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2015</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">27,205 (19%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">11,039 (15%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">16,166 (23%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2016</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">19,283 (13%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">10,664 (15%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">8,619 (12%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2017</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">18,661 (13%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">9,694 (14%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">8,967 (13%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2018</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">8,963 (6.3%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">8,963 (12%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2019</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">8,164 (5.7%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">8,164 (11%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2020</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">7,520 (5.3%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">7,520 (10%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Â Â Â Â 2021</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">3,787 (2.6%)</td>\n<td headers=\"stat_1\" class=\"gt_row gt_center\">3,787 (5.3%)</td>\n<td headers=\"stat_2\" class=\"gt_row gt_center\">0 (0%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><sup class=\"gt_footnote_marks\">1</sup> Mean Â± SD; n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\nThat gives us the table - and if we wanted to save to a Word document, it's just a couple extra lines of code (everything below is exactly the same as above, except for the pipe on the third to last line of code, and the last two lines of code):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntab1 |> \n  select(age, age_cat, sex, race, hispanic, smokingindicator, diabetesindicator, \n         ckdindicator, esrdindicator, hfejindicator, chdindicator, pcrindicator,\n         strokeindicator, padindicator, ascvdindicator, afindicator, copdindicator,\n         asthmaindicator, depressionindicator, combined_score_num, statinindicator,\n         aspirinindicator, index_year, source) |> \n  tbl_summary(\n    by = source,\n    missing_text = \"(Missing)\",\n    statistic = list(all_continuous() ~ \"{mean} Â± {sd}\")\n    ) |> \n  add_overall() |> \n  as_flex_table() |> \n  save_as_docx(path=\"./output/table1_output_alt.docx\")\n```\n:::\n\n\nVoila! [This output](labdocs/output/table1_output_alt.docx) is pretty darn close to final output! Just needs a bit of freshening up, e.g., with bolding of column headers.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}